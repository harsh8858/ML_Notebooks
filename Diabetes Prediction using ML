{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Diabetes Prediction using ML","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNyNGn/zjxbbcH9VHahLVXs"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Importing The Dependencies**"],"metadata":{"id":"SSTIP5O7tAh0"}},{"cell_type":"code","source":["import numpy as np \n","import pandas as pd\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import train_test_split\n","from sklearn import svm\n","from sklearn.metrics import accuracy_score"],"metadata":{"id":"NvbC1gt4tgFQ","executionInfo":{"status":"ok","timestamp":1658507585476,"user_tz":-330,"elapsed":444,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":31,"outputs":[]},{"cell_type":"markdown","source":["Data Collection and Processing"],"metadata":{"id":"P8jRtYPDyrP5"}},{"cell_type":"code","source":["#load the diabetes dataset into the pandas data frame in some variable\n","diabetes_dataset = pd.read_csv('/content/diabetes.csv')"],"metadata":{"id":"bIHrIWsFyy9s","executionInfo":{"status":"ok","timestamp":1658507587107,"user_tz":-330,"elapsed":1147,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["# printing the first five rows of the daibetes dataset\n","diabetes_dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"sWAB8E380c0L","executionInfo":{"status":"ok","timestamp":1658507587108,"user_tz":-330,"elapsed":87,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"92098a06-52e5-4547-9426-3c717db1cd28"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0            6      148             72             35        0  33.6   \n","1            1       85             66             29        0  26.6   \n","2            8      183             64              0        0  23.3   \n","3            1       89             66             23       94  28.1   \n","4            0      137             40             35      168  43.1   \n","\n","   DiabetesPedigreeFunction  Age  Outcome  \n","0                     0.627   50        1  \n","1                     0.351   31        0  \n","2                     0.672   32        1  \n","3                     0.167   21        0  \n","4                     2.288   33        1  "],"text/html":["\n","  <div id=\"df-5334249f-48b7-4a3d-9b01-96be81aa11d5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5334249f-48b7-4a3d-9b01-96be81aa11d5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5334249f-48b7-4a3d-9b01-96be81aa11d5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5334249f-48b7-4a3d-9b01-96be81aa11d5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["#Getting the rows and columns of our dataset which basically number of examples and attributes in our dataset\n","diabetes_dataset.shape\n","#number of columns basically means number of attributes on which our result depends"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oTgsuoKK1ob9","executionInfo":{"status":"ok","timestamp":1658507587109,"user_tz":-330,"elapsed":78,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"4bf8d85e-b42e-4775-cccd-cd8fd1726f4f"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(768, 9)"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["#statistical measures of the data\n","diabetes_dataset.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":364},"id":"O81pSmL72xKd","executionInfo":{"status":"ok","timestamp":1658507587110,"user_tz":-330,"elapsed":68,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"5f11511f-15f4-4e0c-aa17-a8d9caacb9b4"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Pregnancies     Glucose  BloodPressure  SkinThickness     Insulin  \\\n","count   768.000000  768.000000     768.000000     768.000000  768.000000   \n","mean      3.845052  120.894531      69.105469      20.536458   79.799479   \n","std       3.369578   31.972618      19.355807      15.952218  115.244002   \n","min       0.000000    0.000000       0.000000       0.000000    0.000000   \n","25%       1.000000   99.000000      62.000000       0.000000    0.000000   \n","50%       3.000000  117.000000      72.000000      23.000000   30.500000   \n","75%       6.000000  140.250000      80.000000      32.000000  127.250000   \n","max      17.000000  199.000000     122.000000      99.000000  846.000000   \n","\n","              BMI  DiabetesPedigreeFunction         Age     Outcome  \n","count  768.000000                768.000000  768.000000  768.000000  \n","mean    31.992578                  0.471876   33.240885    0.348958  \n","std      7.884160                  0.331329   11.760232    0.476951  \n","min      0.000000                  0.078000   21.000000    0.000000  \n","25%     27.300000                  0.243750   24.000000    0.000000  \n","50%     32.000000                  0.372500   29.000000    0.000000  \n","75%     36.600000                  0.626250   41.000000    1.000000  \n","max     67.100000                  2.420000   81.000000    1.000000  "],"text/html":["\n","  <div id=\"df-b8e2951a-ac9a-455b-bb1b-545a080d533c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.845052</td>\n","      <td>120.894531</td>\n","      <td>69.105469</td>\n","      <td>20.536458</td>\n","      <td>79.799479</td>\n","      <td>31.992578</td>\n","      <td>0.471876</td>\n","      <td>33.240885</td>\n","      <td>0.348958</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.369578</td>\n","      <td>31.972618</td>\n","      <td>19.355807</td>\n","      <td>15.952218</td>\n","      <td>115.244002</td>\n","      <td>7.884160</td>\n","      <td>0.331329</td>\n","      <td>11.760232</td>\n","      <td>0.476951</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.078000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>99.000000</td>\n","      <td>62.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>27.300000</td>\n","      <td>0.243750</td>\n","      <td>24.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>117.000000</td>\n","      <td>72.000000</td>\n","      <td>23.000000</td>\n","      <td>30.500000</td>\n","      <td>32.000000</td>\n","      <td>0.372500</td>\n","      <td>29.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.000000</td>\n","      <td>140.250000</td>\n","      <td>80.000000</td>\n","      <td>32.000000</td>\n","      <td>127.250000</td>\n","      <td>36.600000</td>\n","      <td>0.626250</td>\n","      <td>41.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>17.000000</td>\n","      <td>199.000000</td>\n","      <td>122.000000</td>\n","      <td>99.000000</td>\n","      <td>846.000000</td>\n","      <td>67.100000</td>\n","      <td>2.420000</td>\n","      <td>81.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8e2951a-ac9a-455b-bb1b-545a080d533c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b8e2951a-ac9a-455b-bb1b-545a080d533c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b8e2951a-ac9a-455b-bb1b-545a080d533c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["#for checking the null case\n","diabetes_dataset.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jFCYTQIl3UK0","executionInfo":{"status":"ok","timestamp":1658507587111,"user_tz":-330,"elapsed":66,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"185885e9-d591-42c7-c1d2-fe581cc9be7e"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pregnancies                 0\n","Glucose                     0\n","BloodPressure               0\n","SkinThickness               0\n","Insulin                     0\n","BMI                         0\n","DiabetesPedigreeFunction    0\n","Age                         0\n","Outcome                     0\n","dtype: int64"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["#value counts for diabetes patients and non diabetic patient\n","diabetes_dataset['Outcome'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ym5z3_6X39U8","executionInfo":{"status":"ok","timestamp":1658507587111,"user_tz":-330,"elapsed":62,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"6e59a502-7df0-414c-aabf-3b5a33612911"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    500\n","1    268\n","Name: Outcome, dtype: int64"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["label 0 represents Non-Diabteic Patient\n","\n","label 1 represents Diabetic Patient"],"metadata":{"id":"DjdXxOCN5AbB"}},{"cell_type":"code","source":["#mean value of every attribute which has outcome 0 or outcome 1\n","diabetes_dataset.groupby('Outcome').mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":207},"id":"b_0AQqsm4jiI","executionInfo":{"status":"ok","timestamp":1658507587112,"user_tz":-330,"elapsed":60,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"ccd12532-3990-4fa7-9a2a-0855bfc2ea2b"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Pregnancies     Glucose  BloodPressure  SkinThickness     Insulin  \\\n","Outcome                                                                      \n","0           3.298000  109.980000      68.184000      19.664000   68.792000   \n","1           4.865672  141.257463      70.824627      22.164179  100.335821   \n","\n","               BMI  DiabetesPedigreeFunction        Age  \n","Outcome                                                  \n","0        30.304200                  0.429734  31.190000  \n","1        35.142537                  0.550500  37.067164  "],"text/html":["\n","  <div id=\"df-12b46063-4448-4e8d-b2d2-a542792c9a26\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.298000</td>\n","      <td>109.980000</td>\n","      <td>68.184000</td>\n","      <td>19.664000</td>\n","      <td>68.792000</td>\n","      <td>30.304200</td>\n","      <td>0.429734</td>\n","      <td>31.190000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.865672</td>\n","      <td>141.257463</td>\n","      <td>70.824627</td>\n","      <td>22.164179</td>\n","      <td>100.335821</td>\n","      <td>35.142537</td>\n","      <td>0.550500</td>\n","      <td>37.067164</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-12b46063-4448-4e8d-b2d2-a542792c9a26')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-12b46063-4448-4e8d-b2d2-a542792c9a26 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-12b46063-4448-4e8d-b2d2-a542792c9a26');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# Seperating the data and the labels for further uses\n","X = diabetes_dataset.drop(columns='Outcome',axis=1)\n","Y = diabetes_dataset['Outcome']"],"metadata":{"id":"47AaEJ2F53hF","executionInfo":{"status":"ok","timestamp":1658507587112,"user_tz":-330,"elapsed":58,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["print(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yMJicXWQ7fkH","executionInfo":{"status":"ok","timestamp":1658507587113,"user_tz":-330,"elapsed":59,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"3b0c52cb-2680-433a-fe0a-b3c2d2819ef4"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["     Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0              6      148             72             35        0  33.6   \n","1              1       85             66             29        0  26.6   \n","2              8      183             64              0        0  23.3   \n","3              1       89             66             23       94  28.1   \n","4              0      137             40             35      168  43.1   \n","..           ...      ...            ...            ...      ...   ...   \n","763           10      101             76             48      180  32.9   \n","764            2      122             70             27        0  36.8   \n","765            5      121             72             23      112  26.2   \n","766            1      126             60              0        0  30.1   \n","767            1       93             70             31        0  30.4   \n","\n","     DiabetesPedigreeFunction  Age  \n","0                       0.627   50  \n","1                       0.351   31  \n","2                       0.672   32  \n","3                       0.167   21  \n","4                       2.288   33  \n","..                        ...  ...  \n","763                     0.171   63  \n","764                     0.340   27  \n","765                     0.245   30  \n","766                     0.349   47  \n","767                     0.315   23  \n","\n","[768 rows x 8 columns]\n"]}]},{"cell_type":"code","source":["print(Y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pKlwYP5Y7h64","executionInfo":{"status":"ok","timestamp":1658507587113,"user_tz":-330,"elapsed":57,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"37f54588-6faf-4552-e19b-73d048adbed0"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["0      1\n","1      0\n","2      1\n","3      0\n","4      1\n","      ..\n","763    0\n","764    0\n","765    0\n","766    1\n","767    0\n","Name: Outcome, Length: 768, dtype: int64\n"]}]},{"cell_type":"markdown","source":["**Data Standardization**"],"metadata":{"id":"LgTZxJ3PmiRn"}},{"cell_type":"code","source":["scaler = StandardScaler() #Taking one instance of StandardScaler in the variable"],"metadata":{"id":"lWgQRVZrnHNW","executionInfo":{"status":"ok","timestamp":1658507587114,"user_tz":-330,"elapsed":54,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["scaler.fit(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qfzwIIesoGIF","executionInfo":{"status":"ok","timestamp":1658507587114,"user_tz":-330,"elapsed":53,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"0d472cc8-45c3-4ab9-a9a0-25e9653116ed"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["StandardScaler()"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["standarized_data = scaler.transform(X)"],"metadata":{"id":"FCLn83quoKXC","executionInfo":{"status":"ok","timestamp":1658507587115,"user_tz":-330,"elapsed":50,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["print(standarized_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4fZbfae4o9WT","executionInfo":{"status":"ok","timestamp":1658507587115,"user_tz":-330,"elapsed":50,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"27df11c8-cfc6-432c-c722-5ae4109a7890"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.63994726  0.84832379  0.14964075 ...  0.20401277  0.46849198\n","   1.4259954 ]\n"," [-0.84488505 -1.12339636 -0.16054575 ... -0.68442195 -0.36506078\n","  -0.19067191]\n"," [ 1.23388019  1.94372388 -0.26394125 ... -1.10325546  0.60439732\n","  -0.10558415]\n"," ...\n"," [ 0.3429808   0.00330087  0.14964075 ... -0.73518964 -0.68519336\n","  -0.27575966]\n"," [-0.84488505  0.1597866  -0.47073225 ... -0.24020459 -0.37110101\n","   1.17073215]\n"," [-0.84488505 -0.8730192   0.04624525 ... -0.20212881 -0.47378505\n","  -0.87137393]]\n"]}]},{"cell_type":"code","source":["X = standarized_data\n","Y = diabetes_dataset['Outcome']"],"metadata":{"id":"bGQMQIS3plxn","executionInfo":{"status":"ok","timestamp":1658507587117,"user_tz":-330,"elapsed":48,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":46,"outputs":[]},{"cell_type":"markdown","source":["Spiliting Into Training and Testing data"],"metadata":{"id":"0S607Fvsp_OS"}},{"cell_type":"code","source":["X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=1)"],"metadata":{"id":"fZnHFL_5qE6q","executionInfo":{"status":"ok","timestamp":1658507587118,"user_tz":-330,"elapsed":47,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":47,"outputs":[]},{"cell_type":"markdown","source":["Training The Model USing SVM "],"metadata":{"id":"4tZy3pmotpfP"}},{"cell_type":"code","source":["classifier = svm.SVC(kernel='linear')"],"metadata":{"id":"L4wYnWCYtt0k","executionInfo":{"status":"ok","timestamp":1658507587119,"user_tz":-330,"elapsed":47,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["#Now we train the SVM with our training data\n","classifier.fit(X_train,Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pqeh-jDbtvwW","executionInfo":{"status":"ok","timestamp":1658507587120,"user_tz":-330,"elapsed":48,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"4e84ba46-9b47-4f1e-9079-9926e0ac3392"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(kernel='linear')"]},"metadata":{},"execution_count":49}]},{"cell_type":"markdown","source":["Checking The Model Accuracy "],"metadata":{"id":"8uldE7w1ugmA"}},{"cell_type":"code","source":["#Accuracy score on the Training data\n","X_train_prediction = classifier.predict(X_train)\n","training_data_accuracy = accuracy_score(X_train_prediction,Y_train)"],"metadata":{"id":"YO6fkwkTukIT","executionInfo":{"status":"ok","timestamp":1658507587121,"user_tz":-330,"elapsed":45,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["print(training_data_accuracy) #printing the training data accuracy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"th63ODoXvKPo","executionInfo":{"status":"ok","timestamp":1658507587121,"user_tz":-330,"elapsed":44,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"01bce2aa-3bb2-46c8-defa-473af09565d3"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["0.7833876221498371\n"]}]},{"cell_type":"markdown","source":["Accuracy on the Training Data is about 78%"],"metadata":{"id":"OD2ub4XwvZh4"}},{"cell_type":"markdown","source":["Now Check on the Testing data"],"metadata":{"id":"auCxh5Vuvfbx"}},{"cell_type":"code","source":["X_test_prediction = classifier.predict(X_test)\n","testing_data_accuracy = accuracy_score(X_test_prediction,Y_test)"],"metadata":{"id":"qPkRwy_GvjSU","executionInfo":{"status":"ok","timestamp":1658507587122,"user_tz":-330,"elapsed":42,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["print(X_test_prediction)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IdUOwr-yvw7o","executionInfo":{"status":"ok","timestamp":1658507587123,"user_tz":-330,"elapsed":43,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"8b254728-8636-4cbd-c0a4-5865d024f353"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0\n"," 1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0\n"," 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0\n"," 0 0 0 1 1 0 0 1 1 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0\n"," 0 0 1 0 1 0]\n"]}]},{"cell_type":"code","source":["print(testing_data_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lBlK54kTvzd5","executionInfo":{"status":"ok","timestamp":1658507587123,"user_tz":-330,"elapsed":40,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"acec151b-d574-4084-a490-1b476db64924"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["0.7792207792207793\n"]}]},{"cell_type":"markdown","source":["Accuracy on the Testing data is about 77%"],"metadata":{"id":"lr7nYIXav6DG"}},{"cell_type":"markdown","source":["**Making A Predictive System on the Input Data Given By User**"],"metadata":{"id":"GUd3gQywwroA"}},{"cell_type":"code","source":["input_data = (1,103,30,38,83,43.3,0.183,33)\n","\n","#Change the input data into the numpy array\n","input_data_numpy = np.asarray(input_data)\n","\n","#reshaping the array \n","input_data_reshaped = input_data_numpy.reshape(1,-1)\n","\n","#standarising the input data before predicting\n","std_data = scaler.transform(input_data_reshaped)\n","\n","prediction = classifier.predict(std_data)\n","\n","if(prediction[0]==0):\n","  print('The Person is NON-DIABETIC')\n","else:\n","  print('The Person is DIABETIC')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UQLakyY0wzz6","executionInfo":{"status":"ok","timestamp":1658508746263,"user_tz":-330,"elapsed":12,"user":{"displayName":"Harsh Agrawal","userId":"02074179482775891509"}},"outputId":"136b624e-3f24-4cd4-cc80-54484cad89a3"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["The Person is NON-DIABETIC\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names\n","  \"X does not have valid feature names, but\"\n"]}]}]}